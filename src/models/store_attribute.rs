/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StoreAttribute {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "code", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub code: Option<Option<String>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "default_values", skip_serializing_if = "Option::is_none")]
    pub default_values: Option<Vec<String>>,
    #[serde(rename = "position", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub position: Option<Option<i32>>,
    #[serde(rename = "visible", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub visible: Option<Option<bool>>,
    #[serde(rename = "required", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub required: Option<Option<bool>>,
    #[serde(rename = "system", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub system: Option<Option<bool>>,
    #[serde(rename = "values", skip_serializing_if = "Option::is_none")]
    pub values: Option<Vec<String>>,
    #[serde(rename = "store_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub store_id: Option<Option<String>>,
    #[serde(rename = "lang_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub lang_id: Option<Option<String>>,
    #[serde(rename = "additional_fields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub additional_fields: Option<Option<serde_json::Value>>,
    #[serde(rename = "custom_fields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<Option<serde_json::Value>>,
}

impl StoreAttribute {
    pub fn new() -> StoreAttribute {
        StoreAttribute {
            id: None,
            code: None,
            r#type: None,
            name: None,
            default_values: None,
            position: None,
            visible: None,
            required: None,
            system: None,
            values: None,
            store_id: None,
            lang_id: None,
            additional_fields: None,
            custom_fields: None,
        }
    }
}

