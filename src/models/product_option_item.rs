/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProductOptionItem {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "product_option_item_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub product_option_item_id: Option<Option<String>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "sort_order", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sort_order: Option<Option<i32>>,
    #[serde(rename = "price", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub price: Option<Option<String>>,
    #[serde(rename = "weight", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub weight: Option<Option<String>>,
    #[serde(rename = "quantity", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<Option<i32>>,
    #[serde(rename = "type_price", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub type_price: Option<Option<String>>,
    #[serde(rename = "sku", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sku: Option<Option<String>>,
    #[serde(rename = "is_default", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub is_default: Option<Option<bool>>,
    #[serde(rename = "additional_fields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub additional_fields: Option<Option<serde_json::Value>>,
    #[serde(rename = "custom_fields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<Option<serde_json::Value>>,
}

impl ProductOptionItem {
    pub fn new() -> ProductOptionItem {
        ProductOptionItem {
            id: None,
            product_option_item_id: None,
            name: None,
            sort_order: None,
            price: None,
            weight: None,
            quantity: None,
            type_price: None,
            sku: None,
            is_default: None,
            additional_fields: None,
            custom_fields: None,
        }
    }
}

