/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CouponCondition {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "entity", skip_serializing_if = "Option::is_none")]
    pub entity: Option<String>,
    #[serde(rename = "match_items", skip_serializing_if = "Option::is_none")]
    pub match_items: Option<String>,
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    #[serde(rename = "operator", skip_serializing_if = "Option::is_none")]
    pub operator: Option<String>,
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
    #[serde(rename = "logic_operator", skip_serializing_if = "Option::is_none")]
    pub logic_operator: Option<String>,
    #[serde(rename = "sub-conditions", skip_serializing_if = "Option::is_none")]
    pub sub_conditions: Option<Vec<models::CouponCondition>>,
    #[serde(rename = "additional_fields", skip_serializing_if = "Option::is_none")]
    pub additional_fields: Option<serde_json::Value>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<serde_json::Value>,
}

impl CouponCondition {
    pub fn new() -> CouponCondition {
        CouponCondition {
            id: None,
            entity: None,
            match_items: None,
            key: None,
            operator: None,
            value: None,
            logic_operator: None,
            sub_conditions: None,
            additional_fields: None,
            custom_fields: None,
        }
    }
}

