/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Info {
    #[serde(rename = "owner", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub owner: Option<Option<String>>,
    #[serde(rename = "country", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub country: Option<Option<String>>,
    #[serde(rename = "state", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub state: Option<Option<String>>,
    #[serde(rename = "state_code", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub state_code: Option<Option<String>>,
    #[serde(rename = "city", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub city: Option<Option<String>>,
    #[serde(rename = "street_address", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub street_address: Option<Option<String>>,
    #[serde(rename = "street_address_line_2", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub street_address_line_2: Option<Option<String>>,
    #[serde(rename = "zip_code", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub zip_code: Option<Option<String>>,
    #[serde(rename = "email", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub email: Option<Option<String>>,
    #[serde(rename = "phone", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub phone: Option<Option<String>>,
    #[serde(rename = "additional_fields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub additional_fields: Option<Option<serde_json::Value>>,
    #[serde(rename = "custom_fields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<Option<serde_json::Value>>,
}

impl Info {
    pub fn new() -> Info {
        Info {
            owner: None,
            country: None,
            state: None,
            state_code: None,
            city: None,
            street_address: None,
            street_address_line_2: None,
            zip_code: None,
            email: None,
            phone: None,
            additional_fields: None,
            custom_fields: None,
        }
    }
}

