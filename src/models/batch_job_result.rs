/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BatchJobResult {
    #[serde(rename = "job_id", skip_serializing_if = "Option::is_none")]
    pub job_id: Option<i32>,
    #[serde(rename = "job_name", skip_serializing_if = "Option::is_none")]
    pub job_name: Option<String>,
    #[serde(rename = "items_processed", skip_serializing_if = "Option::is_none")]
    pub items_processed: Option<i32>,
    #[serde(rename = "items_succeed", skip_serializing_if = "Option::is_none")]
    pub items_succeed: Option<i32>,
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<models::BatchJobResultItem>>,
    #[serde(rename = "additional_fields", skip_serializing_if = "Option::is_none")]
    pub additional_fields: Option<serde_json::Value>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<serde_json::Value>,
}

impl BatchJobResult {
    pub fn new() -> BatchJobResult {
        BatchJobResult {
            job_id: None,
            job_name: None,
            items_processed: None,
            items_succeed: None,
            items: None,
            additional_fields: None,
            custom_fields: None,
        }
    }
}

