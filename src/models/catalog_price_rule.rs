/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogPriceRule {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "gid", skip_serializing_if = "Option::is_none")]
    pub gid: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "short_description", skip_serializing_if = "Option::is_none")]
    pub short_description: Option<String>,
    #[serde(rename = "avail", skip_serializing_if = "Option::is_none")]
    pub avail: Option<bool>,
    #[serde(rename = "actions", skip_serializing_if = "Option::is_none")]
    pub actions: Option<Vec<models::CatalogPriceRuleAction>>,
    #[serde(rename = "created_time", skip_serializing_if = "Option::is_none")]
    pub created_time: Option<Box<models::A2CDateTime>>,
    #[serde(rename = "date_start", skip_serializing_if = "Option::is_none")]
    pub date_start: Option<Box<models::A2CDateTime>>,
    #[serde(rename = "date_end", skip_serializing_if = "Option::is_none")]
    pub date_end: Option<Box<models::A2CDateTime>>,
    #[serde(rename = "usage_count", skip_serializing_if = "Option::is_none")]
    pub usage_count: Option<f64>,
    #[serde(rename = "conditions", skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<models::CouponCondition>>,
    #[serde(rename = "uses_per_order_limit", skip_serializing_if = "Option::is_none")]
    pub uses_per_order_limit: Option<i32>,
    #[serde(rename = "additional_fields", skip_serializing_if = "Option::is_none")]
    pub additional_fields: Option<serde_json::Value>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<serde_json::Value>,
}

impl CatalogPriceRule {
    pub fn new() -> CatalogPriceRule {
        CatalogPriceRule {
            id: None,
            gid: None,
            r#type: None,
            name: None,
            description: None,
            short_description: None,
            avail: None,
            actions: None,
            created_time: None,
            date_start: None,
            date_end: None,
            usage_count: None,
            conditions: None,
            uses_per_order_limit: None,
            additional_fields: None,
            custom_fields: None,
        }
    }
}

