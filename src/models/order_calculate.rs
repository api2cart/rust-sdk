/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderCalculate {
    /// Defines the customer specified by email for whom the order needs to be calculated
    #[serde(rename = "customer_email")]
    pub customer_email: String,
    /// Currency Id
    #[serde(rename = "currency_id", skip_serializing_if = "Option::is_none")]
    pub currency_id: Option<String>,
    /// Store Id
    #[serde(rename = "store_id", skip_serializing_if = "Option::is_none")]
    pub store_id: Option<String>,
    /// Coupons that will be applied to order. If the order isn't eligible for any given discount code or there is no discount with such a code it will be skipped during calculation
    #[serde(rename = "coupons", skip_serializing_if = "Option::is_none")]
    pub coupons: Option<Vec<String>>,
    /// Specifies shipping first name
    #[serde(rename = "shipp_first_name")]
    pub shipp_first_name: String,
    /// Specifies shipping last name
    #[serde(rename = "shipp_last_name")]
    pub shipp_last_name: String,
    /// Specifies first shipping address
    #[serde(rename = "shipp_address_1")]
    pub shipp_address_1: String,
    /// Specifies second address line of a shipping street address
    #[serde(rename = "shipp_address_2", skip_serializing_if = "Option::is_none")]
    pub shipp_address_2: Option<String>,
    /// Specifies shipping city
    #[serde(rename = "shipp_city")]
    pub shipp_city: String,
    /// Specifies shipping postcode
    #[serde(rename = "shipp_postcode")]
    pub shipp_postcode: String,
    /// Specifies shipping state code
    #[serde(rename = "shipp_state", skip_serializing_if = "Option::is_none")]
    pub shipp_state: Option<String>,
    /// Specifies shipping country code
    #[serde(rename = "shipp_country")]
    pub shipp_country: String,
    /// Specifies shipping company
    #[serde(rename = "shipp_company", skip_serializing_if = "Option::is_none")]
    pub shipp_company: Option<String>,
    /// Specifies shipping phone
    #[serde(rename = "shipp_phone", skip_serializing_if = "Option::is_none")]
    pub shipp_phone: Option<String>,
    /// Specifies billing first name
    #[serde(rename = "bill_first_name", skip_serializing_if = "Option::is_none")]
    pub bill_first_name: Option<String>,
    /// Specifies billing last name
    #[serde(rename = "bill_last_name", skip_serializing_if = "Option::is_none")]
    pub bill_last_name: Option<String>,
    /// Specifies first billing address
    #[serde(rename = "bill_address_1", skip_serializing_if = "Option::is_none")]
    pub bill_address_1: Option<String>,
    /// Specifies second billing address
    #[serde(rename = "bill_address_2", skip_serializing_if = "Option::is_none")]
    pub bill_address_2: Option<String>,
    /// Specifies billing city
    #[serde(rename = "bill_city", skip_serializing_if = "Option::is_none")]
    pub bill_city: Option<String>,
    /// Specifies billing postcode
    #[serde(rename = "bill_postcode", skip_serializing_if = "Option::is_none")]
    pub bill_postcode: Option<String>,
    /// Specifies billing state code
    #[serde(rename = "bill_state", skip_serializing_if = "Option::is_none")]
    pub bill_state: Option<String>,
    /// Specifies billing country code
    #[serde(rename = "bill_country", skip_serializing_if = "Option::is_none")]
    pub bill_country: Option<String>,
    /// Specifies billing company
    #[serde(rename = "bill_company", skip_serializing_if = "Option::is_none")]
    pub bill_company: Option<String>,
    /// Specifies billing phone
    #[serde(rename = "bill_phone", skip_serializing_if = "Option::is_none")]
    pub bill_phone: Option<String>,
    /// Set this parameter in order to choose which entity fields you want to retrieve
    #[serde(rename = "response_fields", skip_serializing_if = "Option::is_none")]
    pub response_fields: Option<String>,
    #[serde(rename = "order_item")]
    pub order_item: Vec<models::OrderCalculateOrderItemInner>,
}

impl OrderCalculate {
    pub fn new(customer_email: String, shipp_first_name: String, shipp_last_name: String, shipp_address_1: String, shipp_city: String, shipp_postcode: String, shipp_country: String, order_item: Vec<models::OrderCalculateOrderItemInner>) -> OrderCalculate {
        OrderCalculate {
            customer_email,
            currency_id: None,
            store_id: None,
            coupons: None,
            shipp_first_name,
            shipp_last_name,
            shipp_address_1,
            shipp_address_2: None,
            shipp_city,
            shipp_postcode,
            shipp_state: None,
            shipp_country,
            shipp_company: None,
            shipp_phone: None,
            bill_first_name: None,
            bill_last_name: None,
            bill_address_1: None,
            bill_address_2: None,
            bill_city: None,
            bill_postcode: None,
            bill_state: None,
            bill_country: None,
            bill_company: None,
            bill_phone: None,
            response_fields: None,
            order_item,
        }
    }
}

