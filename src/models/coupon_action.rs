/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CouponAction {
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<String>,
    #[serde(rename = "apply_to", skip_serializing_if = "Option::is_none")]
    pub apply_to: Option<String>,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<f64>,
    #[serde(rename = "currency_code", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub currency_code: Option<Option<String>>,
    #[serde(rename = "include_tax", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub include_tax: Option<Option<bool>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "discounted_quantity", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub discounted_quantity: Option<Option<f64>>,
    #[serde(rename = "discount_quantity_step", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub discount_quantity_step: Option<Option<i32>>,
    #[serde(rename = "logic_operator", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub logic_operator: Option<Option<String>>,
    #[serde(rename = "conditions", skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<models::CouponCondition>>,
    #[serde(rename = "additional_fields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub additional_fields: Option<Option<serde_json::Value>>,
    #[serde(rename = "custom_fields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<Option<serde_json::Value>>,
}

impl CouponAction {
    pub fn new() -> CouponAction {
        CouponAction {
            scope: None,
            apply_to: None,
            amount: None,
            currency_code: None,
            include_tax: None,
            r#type: None,
            discounted_quantity: None,
            discount_quantity_step: None,
            logic_operator: None,
            conditions: None,
            additional_fields: None,
            custom_fields: None,
        }
    }
}

