/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProductAddSpecificsInnerBookingDetails {
    #[serde(rename = "location")]
    pub location: String,
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "session_duration", skip_serializing_if = "Option::is_none")]
    pub session_duration: Option<i32>,
    #[serde(rename = "session_gap", skip_serializing_if = "Option::is_none")]
    pub session_gap: Option<i32>,
    #[serde(rename = "sessions_count")]
    pub sessions_count: i32,
    #[serde(rename = "time_strict_value")]
    pub time_strict_value: f64,
    #[serde(rename = "time_strict_type")]
    pub time_strict_type: TimeStrictType,
    #[serde(rename = "availabilities")]
    pub availabilities: Vec<models::ProductAddSpecificsInnerBookingDetailsAvailabilitiesInner>,
    #[serde(rename = "overrides", skip_serializing_if = "Option::is_none")]
    pub overrides: Option<Vec<models::ProductAddSpecificsInnerBookingDetailsOverridesInner>>,
}

impl ProductAddSpecificsInnerBookingDetails {
    pub fn new(location: String, r#type: Type, sessions_count: i32, time_strict_value: f64, time_strict_type: TimeStrictType, availabilities: Vec<models::ProductAddSpecificsInnerBookingDetailsAvailabilitiesInner>) -> ProductAddSpecificsInnerBookingDetails {
        ProductAddSpecificsInnerBookingDetails {
            location,
            r#type,
            session_duration: None,
            session_gap: None,
            sessions_count,
            time_strict_value,
            time_strict_type,
            availabilities,
            overrides: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "date")]
    Date,
    #[serde(rename = "date_time")]
    DateTime,
}

impl Default for Type {
    fn default() -> Type {
        Self::Date
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TimeStrictType {
    #[serde(rename = "days")]
    Days,
    #[serde(rename = "hours")]
    Hours,
    #[serde(rename = "minutes")]
    Minutes,
}

impl Default for TimeStrictType {
    fn default() -> TimeStrictType {
        Self::Days
    }
}

