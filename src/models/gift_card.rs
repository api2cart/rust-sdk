/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GiftCard {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<String>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "currency_code", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub currency_code: Option<Option<String>>,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<f64>,
    #[serde(rename = "initial_amount", skip_serializing_if = "Option::is_none")]
    pub initial_amount: Option<f64>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "created_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<Option<String>>,
    #[serde(rename = "avail_to", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub avail_to: Option<Option<String>>,
    #[serde(rename = "free_product_ids", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub free_product_ids: Option<Option<String>>,
    #[serde(rename = "message", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub message: Option<Option<String>>,
    #[serde(rename = "issuer_email", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub issuer_email: Option<Option<String>>,
    #[serde(rename = "recipient_email", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub recipient_email: Option<Option<String>>,
    #[serde(rename = "issuer_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub issuer_name: Option<Option<String>>,
    #[serde(rename = "recipient_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub recipient_name: Option<Option<String>>,
    #[serde(rename = "usage_history", skip_serializing_if = "Option::is_none")]
    pub usage_history: Option<Vec<models::CouponHistory>>,
    #[serde(rename = "additional_fields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub additional_fields: Option<Option<serde_json::Value>>,
    #[serde(rename = "custom_fields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<Option<serde_json::Value>>,
}

impl GiftCard {
    pub fn new() -> GiftCard {
        GiftCard {
            id: None,
            code: None,
            name: None,
            r#type: None,
            currency_code: None,
            amount: None,
            initial_amount: None,
            status: None,
            created_at: None,
            avail_to: None,
            free_product_ids: None,
            message: None,
            issuer_email: None,
            recipient_email: None,
            issuer_name: None,
            recipient_name: None,
            usage_history: None,
            additional_fields: None,
            custom_fields: None,
        }
    }
}

