/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MarketplaceProduct {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "u_asin", skip_serializing_if = "Option::is_none")]
    pub u_asin: Option<String>,
    #[serde(rename = "u_ean", skip_serializing_if = "Option::is_none")]
    pub u_ean: Option<String>,
    #[serde(rename = "u_gtin", skip_serializing_if = "Option::is_none")]
    pub u_gtin: Option<String>,
    #[serde(rename = "u_isbn", skip_serializing_if = "Option::is_none")]
    pub u_isbn: Option<String>,
    #[serde(rename = "u_mpn", skip_serializing_if = "Option::is_none")]
    pub u_mpn: Option<String>,
    #[serde(rename = "u_upc", skip_serializing_if = "Option::is_none")]
    pub u_upc: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<f64>,
    #[serde(rename = "images", skip_serializing_if = "Option::is_none")]
    pub images: Option<Vec<models::Image>>,
    #[serde(rename = "product_options", skip_serializing_if = "Option::is_none")]
    pub product_options: Option<Vec<models::ProductOption>>,
    #[serde(rename = "manufacturer", skip_serializing_if = "Option::is_none")]
    pub manufacturer: Option<String>,
    #[serde(rename = "brand", skip_serializing_if = "Option::is_none")]
    pub brand: Option<String>,
    #[serde(rename = "weight", skip_serializing_if = "Option::is_none")]
    pub weight: Option<f64>,
    #[serde(rename = "weight_unit", skip_serializing_if = "Option::is_none")]
    pub weight_unit: Option<String>,
    #[serde(rename = "dimensions_unit", skip_serializing_if = "Option::is_none")]
    pub dimensions_unit: Option<String>,
    #[serde(rename = "width", skip_serializing_if = "Option::is_none")]
    pub width: Option<f64>,
    #[serde(rename = "height", skip_serializing_if = "Option::is_none")]
    pub height: Option<f64>,
    #[serde(rename = "length", skip_serializing_if = "Option::is_none")]
    pub length: Option<f64>,
    #[serde(rename = "additional_fields", skip_serializing_if = "Option::is_none")]
    pub additional_fields: Option<serde_json::Value>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<serde_json::Value>,
}

impl MarketplaceProduct {
    pub fn new() -> MarketplaceProduct {
        MarketplaceProduct {
            id: None,
            r#type: None,
            u_asin: None,
            u_ean: None,
            u_gtin: None,
            u_isbn: None,
            u_mpn: None,
            u_upc: None,
            name: None,
            description: None,
            url: None,
            price: None,
            images: None,
            product_options: None,
            manufacturer: None,
            brand: None,
            weight: None,
            weight_unit: None,
            dimensions_unit: None,
            width: None,
            height: None,
            length: None,
            additional_fields: None,
            custom_fields: None,
        }
    }
}

