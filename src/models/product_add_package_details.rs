/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ProductAddPackageDetails : If the seller is subscribed to \"Business Policies\", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">package_details[<b>measure_unit</b>] = string</br> Allowed measure_unit values: [English or Metric] </br> Default: Metric</br>package_details[<b>weigh_unit</b>] = string</br> Allowed weigh_unit values: [kg, g, lbs, oz]</br>package_details[<b>package_depth</b>] = decimal</br>package_details[<b>package_length</b>] = decimal</br>package_details[<b>package_width</b>] = decimal</br>package_details[<b>weight_major</b>] = decimal</br>package_details[<b>weight_minor</b>] = decimal</br>package_details[<b>shipping_package</b>] = string</br> See cart.info method, param `eBay_shipping_package_details`</code></div></div>
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProductAddPackageDetails {
    #[serde(rename = "measure_unit", skip_serializing_if = "Option::is_none")]
    pub measure_unit: Option<String>,
    #[serde(rename = "weigh_unit", skip_serializing_if = "Option::is_none")]
    pub weigh_unit: Option<String>,
    #[serde(rename = "package_depth", skip_serializing_if = "Option::is_none")]
    pub package_depth: Option<f64>,
    #[serde(rename = "package_length", skip_serializing_if = "Option::is_none")]
    pub package_length: Option<f64>,
    #[serde(rename = "package_width", skip_serializing_if = "Option::is_none")]
    pub package_width: Option<f64>,
    #[serde(rename = "weight_major", skip_serializing_if = "Option::is_none")]
    pub weight_major: Option<f64>,
    #[serde(rename = "weight_minor", skip_serializing_if = "Option::is_none")]
    pub weight_minor: Option<f64>,
    #[serde(rename = "shipping_package", skip_serializing_if = "Option::is_none")]
    pub shipping_package: Option<String>,
}

impl ProductAddPackageDetails {
    /// If the seller is subscribed to \"Business Policies\", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">package_details[<b>measure_unit</b>] = string</br> Allowed measure_unit values: [English or Metric] </br> Default: Metric</br>package_details[<b>weigh_unit</b>] = string</br> Allowed weigh_unit values: [kg, g, lbs, oz]</br>package_details[<b>package_depth</b>] = decimal</br>package_details[<b>package_length</b>] = decimal</br>package_details[<b>package_width</b>] = decimal</br>package_details[<b>weight_major</b>] = decimal</br>package_details[<b>weight_minor</b>] = decimal</br>package_details[<b>shipping_package</b>] = string</br> See cart.info method, param `eBay_shipping_package_details`</code></div></div>
    pub fn new() -> ProductAddPackageDetails {
        ProductAddPackageDetails {
            measure_unit: None,
            weigh_unit: None,
            package_depth: None,
            package_length: None,
            package_width: None,
            weight_major: None,
            weight_minor: None,
            shipping_package: None,
        }
    }
}

