/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Brand {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "created_time", skip_serializing_if = "Option::is_none")]
    pub created_time: Option<String>,
    #[serde(rename = "modified_time", skip_serializing_if = "Option::is_none")]
    pub modified_time: Option<String>,
    #[serde(rename = "full_description", skip_serializing_if = "Option::is_none")]
    pub full_description: Option<String>,
    #[serde(rename = "short_description", skip_serializing_if = "Option::is_none")]
    pub short_description: Option<String>,
    #[serde(rename = "stores_ids", skip_serializing_if = "Option::is_none")]
    pub stores_ids: Option<Vec<String>>,
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "meta_title", skip_serializing_if = "Option::is_none")]
    pub meta_title: Option<String>,
    #[serde(rename = "meta_keywords", skip_serializing_if = "Option::is_none")]
    pub meta_keywords: Option<String>,
    #[serde(rename = "meta_description", skip_serializing_if = "Option::is_none")]
    pub meta_description: Option<String>,
    #[serde(rename = "images", skip_serializing_if = "Option::is_none")]
    pub images: Option<Vec<models::Image>>,
    #[serde(rename = "additional_fields", skip_serializing_if = "Option::is_none")]
    pub additional_fields: Option<serde_json::Value>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<serde_json::Value>,
}

impl Brand {
    pub fn new() -> Brand {
        Brand {
            id: None,
            name: None,
            created_time: None,
            modified_time: None,
            full_description: None,
            short_description: None,
            stores_ids: None,
            active: None,
            url: None,
            meta_title: None,
            meta_keywords: None,
            meta_description: None,
            images: None,
            additional_fields: None,
            custom_fields: None,
        }
    }
}

