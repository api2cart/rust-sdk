/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderShipmentAddBatchPayloadInner {
    #[serde(rename = "order_id")]
    pub order_id: String,
    #[serde(rename = "store_id", skip_serializing_if = "Option::is_none")]
    pub store_id: Option<String>,
    #[serde(rename = "warehouse_id", skip_serializing_if = "Option::is_none")]
    pub warehouse_id: Option<String>,
    #[serde(rename = "carrier_id", skip_serializing_if = "Option::is_none")]
    pub carrier_id: Option<String>,
    #[serde(rename = "carrier_name", skip_serializing_if = "Option::is_none")]
    pub carrier_name: Option<String>,
    #[serde(rename = "tracking_number")]
    pub tracking_number: String,
    #[serde(rename = "tracking_link", skip_serializing_if = "Option::is_none")]
    pub tracking_link: Option<String>,
    #[serde(rename = "shipment_provider", skip_serializing_if = "Option::is_none")]
    pub shipment_provider: Option<String>,
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<models::OrderShipmentAddBatchPayloadInnerItemsInner>>,
    #[serde(rename = "send_notifications", skip_serializing_if = "Option::is_none")]
    pub send_notifications: Option<bool>,
}

impl OrderShipmentAddBatchPayloadInner {
    pub fn new(order_id: String, tracking_number: String) -> OrderShipmentAddBatchPayloadInner {
        OrderShipmentAddBatchPayloadInner {
            order_id,
            store_id: None,
            warehouse_id: None,
            carrier_id: None,
            carrier_name: None,
            tracking_number,
            tracking_link: None,
            shipment_provider: None,
            items: None,
            send_notifications: None,
        }
    }
}

