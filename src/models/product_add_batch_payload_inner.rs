/*
 * API2Cart OpenAPI
 *
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProductAddBatchPayloadInner {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "short_description", skip_serializing_if = "Option::is_none")]
    pub short_description: Option<String>,
    #[serde(rename = "sku", skip_serializing_if = "Option::is_none")]
    pub sku: Option<String>,
    #[serde(rename = "model", skip_serializing_if = "Option::is_none")]
    pub model: Option<String>,
    #[serde(rename = "asin", skip_serializing_if = "Option::is_none")]
    pub asin: Option<String>,
    #[serde(rename = "upc", skip_serializing_if = "Option::is_none")]
    pub upc: Option<String>,
    #[serde(rename = "ean", skip_serializing_if = "Option::is_none")]
    pub ean: Option<String>,
    #[serde(rename = "gtin", skip_serializing_if = "Option::is_none")]
    pub gtin: Option<String>,
    #[serde(rename = "mpn", skip_serializing_if = "Option::is_none")]
    pub mpn: Option<String>,
    #[serde(rename = "barcode", skip_serializing_if = "Option::is_none")]
    pub barcode: Option<String>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<f64>,
    #[serde(rename = "old_price", skip_serializing_if = "Option::is_none")]
    pub old_price: Option<f64>,
    #[serde(rename = "cost_price", skip_serializing_if = "Option::is_none")]
    pub cost_price: Option<f64>,
    #[serde(rename = "special_price", skip_serializing_if = "Option::is_none")]
    pub special_price: Option<f64>,
    #[serde(rename = "sprice_create", skip_serializing_if = "Option::is_none")]
    pub sprice_create: Option<String>,
    #[serde(rename = "sprice_expire", skip_serializing_if = "Option::is_none")]
    pub sprice_expire: Option<String>,
    #[serde(rename = "advanced_prices", skip_serializing_if = "Option::is_none")]
    pub advanced_prices: Option<Vec<models::ProductAddBatchPayloadInnerAdvancedPricesInner>>,
    #[serde(rename = "fixed_cost_shipping_price", skip_serializing_if = "Option::is_none")]
    pub fixed_cost_shipping_price: Option<f64>,
    #[serde(rename = "quantity", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<f64>,
    #[serde(rename = "manage_stock", skip_serializing_if = "Option::is_none")]
    pub manage_stock: Option<bool>,
    #[serde(rename = "product_type", skip_serializing_if = "Option::is_none")]
    pub product_type: Option<String>,
    #[serde(rename = "marketplace_item_properties", skip_serializing_if = "Option::is_none")]
    pub marketplace_item_properties: Option<serde_json::Value>,
    #[serde(rename = "specifics", skip_serializing_if = "Option::is_none")]
    pub specifics: Option<serde_json::Value>,
    #[serde(rename = "is_free_shipping", skip_serializing_if = "Option::is_none")]
    pub is_free_shipping: Option<bool>,
    #[serde(rename = "taxable", skip_serializing_if = "Option::is_none")]
    pub taxable: Option<bool>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "condition", skip_serializing_if = "Option::is_none")]
    pub condition: Option<String>,
    #[serde(rename = "visible", skip_serializing_if = "Option::is_none")]
    pub visible: Option<String>,
    #[serde(rename = "available_for_view", skip_serializing_if = "Option::is_none")]
    pub available_for_view: Option<bool>,
    #[serde(rename = "available_for_sale", skip_serializing_if = "Option::is_none")]
    pub available_for_sale: Option<bool>,
    #[serde(rename = "is_virtual", skip_serializing_if = "Option::is_none")]
    pub is_virtual: Option<bool>,
    #[serde(rename = "in_stock", skip_serializing_if = "Option::is_none")]
    pub in_stock: Option<bool>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "downloadable", skip_serializing_if = "Option::is_none")]
    pub downloadable: Option<bool>,
    #[serde(rename = "weight", skip_serializing_if = "Option::is_none")]
    pub weight: Option<f64>,
    #[serde(rename = "length", skip_serializing_if = "Option::is_none")]
    pub length: Option<f64>,
    #[serde(rename = "width", skip_serializing_if = "Option::is_none")]
    pub width: Option<f64>,
    #[serde(rename = "height", skip_serializing_if = "Option::is_none")]
    pub height: Option<f64>,
    #[serde(rename = "weight_unit", skip_serializing_if = "Option::is_none")]
    pub weight_unit: Option<String>,
    #[serde(rename = "dimensions_unit", skip_serializing_if = "Option::is_none")]
    pub dimensions_unit: Option<String>,
    #[serde(rename = "store_id", skip_serializing_if = "Option::is_none")]
    pub store_id: Option<String>,
    #[serde(rename = "lang_id", skip_serializing_if = "Option::is_none")]
    pub lang_id: Option<String>,
    #[serde(rename = "category_id", skip_serializing_if = "Option::is_none")]
    pub category_id: Option<String>,
    #[serde(rename = "warehouse_id", skip_serializing_if = "Option::is_none")]
    pub warehouse_id: Option<String>,
    #[serde(rename = "categories_ids", skip_serializing_if = "Option::is_none")]
    pub categories_ids: Option<Vec<String>>,
    #[serde(rename = "related_products_ids", skip_serializing_if = "Option::is_none")]
    pub related_products_ids: Option<Vec<String>>,
    #[serde(rename = "up_sell_products_ids", skip_serializing_if = "Option::is_none")]
    pub up_sell_products_ids: Option<Vec<String>>,
    #[serde(rename = "cross_sell_products_ids", skip_serializing_if = "Option::is_none")]
    pub cross_sell_products_ids: Option<Vec<String>>,
    #[serde(rename = "stores_ids", skip_serializing_if = "Option::is_none")]
    pub stores_ids: Option<Vec<String>>,
    #[serde(rename = "tax_class_id", skip_serializing_if = "Option::is_none")]
    pub tax_class_id: Option<String>,
    #[serde(rename = "meta_title", skip_serializing_if = "Option::is_none")]
    pub meta_title: Option<String>,
    #[serde(rename = "meta_description", skip_serializing_if = "Option::is_none")]
    pub meta_description: Option<String>,
    #[serde(rename = "meta_keywords", skip_serializing_if = "Option::is_none")]
    pub meta_keywords: Option<Vec<String>>,
    #[serde(rename = "search_keywords", skip_serializing_if = "Option::is_none")]
    pub search_keywords: Option<Vec<String>>,
    #[serde(rename = "harmonized_system_code", skip_serializing_if = "Option::is_none")]
    pub harmonized_system_code: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "seo_url", skip_serializing_if = "Option::is_none")]
    pub seo_url: Option<String>,
    #[serde(rename = "external_product_link", skip_serializing_if = "Option::is_none")]
    pub external_product_link: Option<String>,
    #[serde(rename = "manufacturer", skip_serializing_if = "Option::is_none")]
    pub manufacturer: Option<String>,
    #[serde(rename = "manufacturer_id", skip_serializing_if = "Option::is_none")]
    pub manufacturer_id: Option<String>,
    #[serde(rename = "backorder_status", skip_serializing_if = "Option::is_none")]
    pub backorder_status: Option<String>,
    #[serde(rename = "images", skip_serializing_if = "Option::is_none")]
    pub images: Option<Vec<models::ProductAddBatchPayloadInnerImagesInner>>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "files", skip_serializing_if = "Option::is_none")]
    pub files: Option<Vec<models::ProductAddFilesInner>>,
}

impl ProductAddBatchPayloadInner {
    pub fn new() -> ProductAddBatchPayloadInner {
        ProductAddBatchPayloadInner {
            name: None,
            description: None,
            short_description: None,
            sku: None,
            model: None,
            asin: None,
            upc: None,
            ean: None,
            gtin: None,
            mpn: None,
            barcode: None,
            price: None,
            old_price: None,
            cost_price: None,
            special_price: None,
            sprice_create: None,
            sprice_expire: None,
            advanced_prices: None,
            fixed_cost_shipping_price: None,
            quantity: None,
            manage_stock: None,
            product_type: None,
            marketplace_item_properties: None,
            specifics: None,
            is_free_shipping: None,
            taxable: None,
            status: None,
            condition: None,
            visible: None,
            available_for_view: None,
            available_for_sale: None,
            is_virtual: None,
            in_stock: None,
            r#type: None,
            downloadable: None,
            weight: None,
            length: None,
            width: None,
            height: None,
            weight_unit: None,
            dimensions_unit: None,
            store_id: None,
            lang_id: None,
            category_id: None,
            warehouse_id: None,
            categories_ids: None,
            related_products_ids: None,
            up_sell_products_ids: None,
            cross_sell_products_ids: None,
            stores_ids: None,
            tax_class_id: None,
            meta_title: None,
            meta_description: None,
            meta_keywords: None,
            search_keywords: None,
            harmonized_system_code: None,
            url: None,
            seo_url: None,
            external_product_link: None,
            manufacturer: None,
            manufacturer_id: None,
            backorder_status: None,
            images: None,
            tags: None,
            files: None,
        }
    }
}

